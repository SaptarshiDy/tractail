{"version":3,"file":"static/js/codes.65691cfa.chunk.js","mappings":"4MAuGA,UAnGU,WACF,OAAoBA,EAAAA,EAAAA,UAAS,IAA7B,eAAKC,EAAL,KAAWC,EAAX,KACA,GAAsBF,EAAAA,EAAAA,UAAS,GAA/B,eAAKG,EAAL,KAAWC,EAAX,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,KAA7C,eAAKK,EAAL,KACA,GADA,MACwBL,EAAAA,EAAAA,UAAS,IAAjC,eAAKM,EAAL,KAAYC,EAAZ,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAuBE,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAA4BX,EAAAA,EAAAA,UAAUW,EAAaC,IAAI,WAAa,IAApE,eAAOC,EAAP,KACIC,GADJ,KACiB,WAEbA,EADAD,GAA+B,IAArBE,SAASF,GACN,UACPA,GAA+B,IAArBE,SAASF,GACZ,UAEA,MAEjBG,QAAQC,IAAIJ,GACZ,IAAMK,EAAK,yCAAG,4GAAMC,EAAN,+BAAiB,EAAjB,SACHC,IAAAA,IAAUC,0CAA+C,CAC5DC,OAAQ,CACJnB,KAAcgB,EACdI,MAAclB,EACdmB,MAAchB,EACdK,OAASA,KAEdY,MAAK,SAAAC,GACJxB,EAAQwB,EAASC,KAAKA,MACtBvB,EAAQsB,EAASC,KAAKxB,MACtBI,EAASmB,EAASC,KAAKrB,MAC1B,IAAEsB,OAAM,SAAAC,GACLb,QAAQC,IAAIY,EACf,IAdS,2CAAH,qDAoBf,OAJMC,EAAAA,EAAAA,YAAU,WACRZ,GACH,GAAE,KAGC,gBAAKa,UAAU,MAAf,UACI,iBAAKA,UAAU,oBAAf,WACI,gBAAKA,UAAU,MAAf,UACI,iBAAKA,UAAU,MAAf,WACI,gBAAKA,UAAU,SAAf,UACI,qCAEJ,gBAAKA,UAAU,eAAf,UACI,iBAAKA,UAAU,YAAf,WACI,oBAAQA,UAAU,2CAA2CC,KAAK,SAAS,iBAAe,WAAW,gBAAc,QAAnH,uBACclB,MAEd,gBAAIiB,UAAU,gBAAd,WACI,yBAAI,cAAGA,UAAU,gBAAgBE,KAAI,qBAAgBzB,EAAhB,UAAjC,oBACJ,yBAAI,cAAGuB,UAAU,gBAAgBE,KAAI,qBAAgBzB,EAAhB,mBAAjC,wBACJ,yBAAI,cAAGuB,UAAU,gBAAgBE,KAAI,qBAAgBzB,EAAhB,mBAAjC,qCAMxB,gBAAKuB,UAAU,wBAAf,UACI,mBAAOA,UAAU,gDAAjB,WACI,kBAAOA,UAAU,aAAjB,UACI,gBAAIA,UAAU,aAAd,WACI,eAAIG,MAAM,MAAV,mBACA,eAAIA,MAAM,MAAV,mBACA,eAAIA,MAAM,MAAV,uBACA,eAAIA,MAAM,MAAV,0BAGR,2BACKjC,EAAKkC,KAAI,SAAAC,GACN,OACI,gBAAsBL,UAAU,cAAhC,WACI,eAAIM,OAAO,SAASN,UAAU,aAA9B,SAA4CK,EAAIE,OAChD,eAAID,OAAO,SAASN,UAAU,YAA9B,SAA2CK,EAAIG,YAC/C,eAAIF,OAAO,SAASN,UAAU,YAA9B,SAA2CK,EAAII,WAC/C,eAAIH,OAAO,SAASN,UAAU,YAA9B,SAA2CK,EAAIK,SAJ1CL,EAAIM,OAOpB,YAIb,SAAC,IAAD,CACIC,WAAYxC,EACZyC,gBAAiBtC,EACjBuC,kBAAmBxC,EACnByC,SAAU,SAAC3B,GAAD,OAAcD,EAAMC,EAApB,EACV4B,WAAW,+CACXC,UAAU,YACVC,UAAU,YACVC,gBAAgB,SAChBC,cAAc,QACdC,aAAa,aAKpC,C","sources":["components/codes.js"],"sourcesContent":["import { React,useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link,useParams ,useSearchParams} from 'react-router-dom';\nimport Pagination from \"react-js-pagination\";\nlet Codes=()=>{\n        let [rows, setRows]=useState([]);\n        let [page, setPage] = useState(0);\n        let [rowsPerPage, setRowsPerPage] = useState(100);\n        let [total, setTotal] = useState(0);\n        const { id } = useParams();\n        const [searchParams] = useSearchParams();\n        const [status, setStatus] = useState( searchParams.get('status') || '' );\n        let filterType = 'Unknown'\n        if( status && parseInt(status) === 0 ){\n            filterType = 'Pending';\n        }else if( status && parseInt(status) === 1) {\n            filterType = 'Scanned';\n        }else{\n            filterType = 'All';\n        }\n        console.log(status);\n        const codes = async(pageNumber=0)=> {\n             await axios.get(process.env.REACT_APP_API_URL +'/admin/codes', {\n                params: {\n                    page        : pageNumber,\n                    limit       : rowsPerPage,\n                    jobId       : id,\n                    status : status\n                }\n            }).then(response => {\n                setRows(response.data.data);\n                setPage(response.data.page)\n                setTotal(response.data.total)\n            }).catch(err => {\n                console.log(err);\n            });\n        };\n          useEffect(() => {\n            codes();\n        }, []);\n        \n    return(\n            <div className=\"row\">\n                <div className=\"col-md-11 mx-auto\">\n                    <div className=\"row\">\n                        <div className=\"row\">\n                            <div className=\"col-10\">\n                                <h1>Codes</h1>\n                            </div>\n                            <div className=\"col text-end\">\n                                <div className=\"btn-group\">\n                                    <button className=\"btn btn-secondary btn-sm dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                       Filter by {filterType}\n                                    </button>\n                                    <ul className=\"dropdown-menu\">\n                                        <li><a className=\"dropdown-item\" href={`/admin/job/${id}/codes`}>All</a></li>\n                                        <li><a className=\"dropdown-item\" href={`/admin/job/${id}/codes?status=1`}>Scanned</a></li>\n                                        <li><a className=\"dropdown-item\" href={`/admin/job/${id}/codes?status=0`}>Pending</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"table-responsive mb-3\">\n                        <table className=\"table table-hover table-sm table-striped mb-0\">\n                            <thead className=\"thead-dark\">\n                                <tr className='table-dark'>\n                                    <th scope=\"col\">VPA </th>\n                                    <th scope='col'>Name</th>\n                                    <th scope=\"col\">CloseQR </th>\n                                    <th scope=\"col\">Code  </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {rows.map(row=>{\n                                    return(\n                                        <tr key={row.codeId } className='table-inner'>\n                                            <td valign=\"center\" className='table_dtl1'>{row.vpa}</td>\n                                            <td valign=\"center\" className='table_dtl'>{row.merchant }</td>\n                                            <td valign=\"center\" className='table_dtl'>{row.closeQR }</td>\n                                            <td valign=\"center\" className='table_dtl'>{row.code  }</td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                    <Pagination \n                        activePage={page}\n                        totalItemsCount={total}\n                        itemsCountPerPage={rowsPerPage}\n                        onChange={(pageNumber)=>codes(pageNumber)}\n                        innerClass=\"pagination justify-content-center small mb-0\"\n                        itemClass=\"page-item\"\n                        linkClass=\"page-link\"\n                        activeLinkClass=\"active\"\n                        firstPageText=\"First\"\n                        lastPageText=\"Last\"\n                    />\n                </div>\n            </div>\n    );\n}\nexport default Codes;"],"names":["useState","rows","setRows","page","setPage","rowsPerPage","total","setTotal","id","useParams","useSearchParams","searchParams","get","status","filterType","parseInt","console","log","codes","pageNumber","axios","process","params","limit","jobId","then","response","data","catch","err","useEffect","className","type","href","scope","map","row","valign","vpa","merchant","closeQR","code","codeId","activePage","totalItemsCount","itemsCountPerPage","onChange","innerClass","itemClass","linkClass","activeLinkClass","firstPageText","lastPageText"],"sourceRoot":""}